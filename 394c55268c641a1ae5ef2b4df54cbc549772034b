{
  "comments": [
    {
      "key": {
        "uuid": "b3d56761_09c04d15",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 2
      },
      "lineNbr": 1446,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-11T12:06:31Z",
      "side": 1,
      "message": "being picky, but can you have a better name or some documentation on what this method name means ?",
      "revId": "394c55268c641a1ae5ef2b4df54cbc549772034b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da21f198_e8a5fe75",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 2
      },
      "lineNbr": 1446,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2020-09-11T12:38:44Z",
      "side": 1,
      "message": "Being consistent than, all abbreviations in function names of the module had to be written out in full. ;-) But few lines down, it becomes clear, that this routine deals with the set-request to configure \"VlanTaggingFilterData\". What do you think about it?",
      "parentUuid": "b3d56761_09c04d15",
      "revId": "394c55268c641a1ae5ef2b4df54cbc549772034b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62ba7d94_1517d7e9",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 2
      },
      "lineNbr": 1446,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-11T12:40:55Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "da21f198_e8a5fe75",
      "revId": "394c55268c641a1ae5ef2b4df54cbc549772034b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9036ef9_cb36ff72",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 2
      },
      "lineNbr": 1488,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-11T12:06:31Z",
      "side": 1,
      "message": "worth returning the error even if ignored later ?",
      "revId": "394c55268c641a1ae5ef2b4df54cbc549772034b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e67e3098_c9d61973",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 2
      },
      "lineNbr": 1488,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2020-09-11T12:38:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a9036ef9_cb36ff72",
      "revId": "394c55268c641a1ae5ef2b4df54cbc549772034b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ed66713_f907739f",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 2
      },
      "lineNbr": 1488,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2020-09-11T12:52:46Z",
      "side": 1,
      "message": "Having a look at the code calling the function it became clear, that error handling for all send*() routines is already a matter of refactoring planned with story VOL-3457:\n \n\t\t\tmeInstance :\u003d oFsm.pOmciCC.sendSetVtfdVar(context.TODO(), ConstDefaultOmciTimeout, true,\n\t\t\t\toFsm.pAdaptFsm.commChan, meParams)\n\t\t\t//accept also nil as (error) return value for writing to LastTx\n\t\t\t//  - this avoids misinterpretation of new received OMCI messages\n\t\t\t//TODO!!: refactoring improvement requested, here as an example for [VOL-3457]:\n\t\t\t//  send shall return (dual format) error code that can be used here for immediate error treatment\n\t\t\t//  (relevant to all used sendXX() methods in this (and other) FSM\u0027s)",
      "parentUuid": "e67e3098_c9d61973",
      "revId": "394c55268c641a1ae5ef2b4df54cbc549772034b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}