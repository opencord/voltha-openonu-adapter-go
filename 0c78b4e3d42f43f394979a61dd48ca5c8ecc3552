{
  "comments": [
    {
      "key": {
        "uuid": "a3c122fb_f7ea5d59",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 3
      },
      "lineNbr": 1353,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2021-05-28T12:37:54Z",
      "side": 1,
      "message": "please include the device id in this error with %s",
      "revId": "0c78b4e3d42f43f394979a61dd48ca5c8ecc3552",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdf8e629_8811b450",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 3
      },
      "lineNbr": 1353,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-05-28T13:14:06Z",
      "side": 1,
      "message": "DeviceID will be added centrally by the caller OpenONUAC::Get_onu_images() at line 834.",
      "parentUuid": "a3c122fb_f7ea5d59",
      "revId": "0c78b4e3d42f43f394979a61dd48ca5c8ecc3552",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09e69d57_af9a09b9",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 3
      },
      "lineNbr": 1357,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2021-05-28T12:37:54Z",
      "side": 1,
      "message": "why is this nil ?",
      "revId": "0c78b4e3d42f43f394979a61dd48ca5c8ecc3552",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1abfaca8_cf45b28d",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 3
      },
      "lineNbr": 1357,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-05-28T13:14:06Z",
      "side": 1,
      "message": "The lifetime of the onuImageStatus object instance is limited to the duration of the corresponding RPC processing. To release the instance for the garbage collector after processing, the pointer to it is explicitly released. Furthermore, deviceHandler::resetFsms() uses the pointer to check whether or not the OnuDeviceEntry::CancelProcessing() function must be called during reset.",
      "parentUuid": "09e69d57_af9a09b9",
      "revId": "0c78b4e3d42f43f394979a61dd48ca5c8ecc3552",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    }
  ]
}