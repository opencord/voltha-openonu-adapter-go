{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1f29a4b1_14919a6c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2021-10-13T18:11:19Z",
      "side": 1,
      "message": "verified to be working on the h/w",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4109e712_d8ce96aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-14T06:50:20Z",
      "side": 1,
      "message": "maybe some questions ...",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d0bea2d_4676b865",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-15T07:41:38Z",
      "side": 1,
      "message": "Guess the provided code does what it shall do. Anyway I still have problems understanding the usage of the server status information. As my questions should not prevent the merge I\u0027d better give a +1.",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f2e8911_272e74c3",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 317,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-14T06:50:20Z",
      "side": 1,
      "message": "Is \u0027StatusRunning\u0027 here required for being able to start the service? It is a bit confusing as the ServiceStatus reads a bit like \u0027operational state\u0027, not like \u0027requested state\u0027. I\u0027d expect something more like \u0027ServiceStatusPreparing\u0027 here.",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d8f8a10_c7bdf6de",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 317,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-14T13:24:32Z",
      "side": 1,
      "message": "Server.Start() is a blocking call, hence the only state making sense here is ServiceStatusRunning.",
      "parentUuid": "8f2e8911_272e74c3",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38f979da_ee6382de",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 317,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-15T07:41:38Z",
      "side": 1,
      "message": "Really? Then I would expect \u0027StatusRunning\u0027 only after the Start() - however long the start operation takes....\nAnd see below: afterwards you set the status to \u0027Stopped\u0027.",
      "parentUuid": "4d8f8a10_c7bdf6de",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbc177ad_1648eca0",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 317,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-15T14:01:48Z",
      "side": 1,
      "message": "Let me offer some clarifications:\n1) The startGRPCService() is invoked in its own go routine\n2) server.Start(ctx) invokes the Serve() method on the grpc server.  This method blocks, i.e. serves all grpc requests until it dies or gets kills.   Therefore, a call to server.Start() blocks until the process is terminated.\n3) If server.Start() fails for whatever reason it is a fatal exception, hence the process is terminated right away.\n4) Therefore, before invoking server.Start(), the service is set to running.  And after server.Start(), the service has stopped, hence the stopped status.",
      "parentUuid": "38f979da_ee6382de",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f5a8e2a_c064c37f",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 321,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-14T06:50:20Z",
      "side": 1,
      "message": "Similar to above. ServiceStatus was tried to start, while the operation is later checked from within registerWithCore(). So here I\u0027d rather expect something like \u0027ServiceStatusPrepared\u0027.",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01e37456_6c19895d",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 321,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-14T13:24:32Z",
      "side": 1,
      "message": "As mentioned above, server.Start() is blocking.  When it returns it means the service has stopped.",
      "parentUuid": "5f5a8e2a_c064c37f",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "547a0338_9ff61a3e",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 321,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-15T07:41:38Z",
      "side": 1,
      "message": "That\u0027s a strange notification. A start() call results into the service stopped?",
      "parentUuid": "01e37456_6c19895d",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f276d76c_6dea118a",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 321,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-15T14:01:48Z",
      "side": 1,
      "message": "See prior comment",
      "parentUuid": "547a0338_9ff61a3e",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42cb9566_2322df89",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 560,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-14T06:50:20Z",
      "side": 1,
      "message": "There is nothing adequate in the grpc server to stop the service, adequate to \u0027server.Start(ctx)\u0027 in startGRPCService()? So I would expect something like \u0027a.grpcServer.Stop(ctx)\u0027 here ...",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b284ba2_4cea2d80",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 560,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-14T13:24:32Z",
      "side": 1,
      "message": "There is a stop() invocation later in the code (the stop starts with the etcd client being stopeed that can take time).  Here, we want to mark the onu adapter as not available right away.  This way, any request to this service will be rejected right away.  This in turn triggers the remote end to refresh its connection to the onu adapter. It also let k8s liveness probe aware this service is gone and it can create a new one. So, this code is to speed up things.",
      "parentUuid": "42cb9566_2322df89",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ede1f6a3_3a627a99",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 560,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-15T07:41:38Z",
      "side": 1,
      "message": "Where in the code is the grpcServer.Stop() invocation? Couldn\u0027t find it. It is somehow implicitly done?",
      "parentUuid": "6b284ba2_4cea2d80",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "588f2a0d_094bb80e",
        "filename": "cmd/openonu-adapter/main.go",
        "patchSetId": 1
      },
      "lineNbr": 560,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-15T14:01:48Z",
      "side": 1,
      "message": "It is implicit.  See above comments.  As a side note, process termination in voltha (across components) is something to be revised across board.",
      "parentUuid": "ede1f6a3_3a627a99",
      "revId": "f0d139b82e25c38ea95faf6b0884d4f5e9c22795",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    }
  ]
}