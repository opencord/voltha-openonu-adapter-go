{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "723815ae_95cc9085",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-28T09:58:13Z",
      "side": 1,
      "message": "I\u0027d still recommend an extension in the om data aggregation.",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adde0e17_ac699090",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2021-10-28T19:26:41Z",
      "side": 1,
      "message": "Pending Michael\u0027s comments +1 from me. Once his comments are addressed we can merge.",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69324541_9b7aafa6",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3353,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-28T09:58:13Z",
      "side": 1,
      "message": "If receivedMask !\u003d 0 I think you still allow individual parameters to be unsupported (within metricInfo) - see comment to aggregateEthernetFrameExtendedPM",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1557e5a1_08b05eca",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3353,
      "author": {
        "id": 1000726
      },
      "writtenOn": "2021-10-28T12:36:58Z",
      "side": 1,
      "message": "Yes that is possible. While testing it was found out that not all params are supported.",
      "parentUuid": "69324541_9b7aafa6",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45b3c80b_1476fba7",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3364,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-28T09:58:13Z",
      "side": 1,
      "message": "same as above",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74041ce5_dcebe41e",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3364,
      "author": {
        "id": 1000726
      },
      "writtenOn": "2021-10-28T12:36:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "45b3c80b_1476fba7",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8009e380_28f2caf9",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3756,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-28T09:58:13Z",
      "side": 1,
      "message": "Here it still might be that the new value from pmDataIn indicates \u0027unsupported\u0027 while the \u0027actual\u0027 counter value, here e.g. pmData.DropEvents,  may already be set to some non-zero value. Simply adding both of them may have some unintended result. Guess checking of pmDataIn on \u0027unsupported\u0027 is needed as well.\nOr your assumption is that requests on this counter (type) are always only delivered with \u0027unsupported\u0027 (if once unsupported) for the various requested instances - I am not sure if this assumption can be regarded as valid. And may the extra overhead to protect the \u0027overflow\u0027 here is not that high.",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "300bd502_b8b62759",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3756,
      "author": {
        "id": 1000726
      },
      "writtenOn": "2021-10-28T12:36:58Z",
      "side": 1,
      "message": "I assumed as you mentioned above that once a counter is unsupported for an instance, it will be unsupported for all the unis. But do you suggest that if a counter reported value for one uni but say it reported unsupported for other uni, should I make that counter type as supported or unsupported",
      "parentUuid": "8009e380_28f2caf9",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d1e68d8_7aa9ad4c",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3756,
      "author": {
        "id": 1000726
      },
      "writtenOn": "2021-10-28T14:01:42Z",
      "side": 1,
      "message": "As discussed I will keep it as it is because the assumption is valid.",
      "parentUuid": "300bd502_b8b62759",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "923925a4_ccd07d54",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3756,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-28T17:24:47Z",
      "side": 1,
      "message": "? Maybe I don\u0027t understand it correctly. So my recommendation was to set it to \u0027unsupported\u0027 if at least one sample delivers \u0027unsupported\u0027.\nNow here as a concrete example to illustrate my doubts for current code:\npmData.DropEvents \u003d 200 //from some previously correctly requested sample (if you want UNI)\npmDataIn[\"drop_events\"] \u003d errorCounterValue //because last collected value is indicated as NotSupported (without having declared the complete sample as NotSupported)\nand accordingly new pmDataOut.DropEvents \u003d something that does not make sense",
      "parentUuid": "8d1e68d8_7aa9ad4c",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "427e415f_c902cf68",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3756,
      "author": {
        "id": 1000726
      },
      "writtenOn": "2021-10-29T06:00:22Z",
      "side": 1,
      "message": "My point here is that if say a requests come to collect counters for all unis in aggregation, then lets say drop_events is not supported. While fetching the counters for first uni, I will get unsupported for that uni instance and then pmDataOut.dropEvents \u003d pmData.DropEvents \u003d errorCounterValue. Now my assumption is that for all the rest unis drop_events will be unsupported which is valid. So, next time also pmData.DropEvents \u003d errorCounterValue, hence it will remain the same. There won\u0027t be any case where I see overflow happening because of wrong additions of errorCounterValue and previous counter value.",
      "parentUuid": "923925a4_ccd07d54",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f28dfb00_ea6ee8e5",
        "filename": "internal/pkg/pmmgr/onu_metrics_manager.go",
        "patchSetId": 2
      },
      "lineNbr": 3756,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-10-29T08:40:51Z",
      "side": 1,
      "message": "Ok, based on the improbable scenario we are discussing here I agree to this solution.",
      "parentUuid": "427e415f_c902cf68",
      "revId": "418b1cd97eb3722b9970296991bc2d285b483b71",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    }
  ]
}