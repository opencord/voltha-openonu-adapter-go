{
  "comments": [
    {
      "key": {
        "uuid": "0271bf46_89f4dc9b",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 331,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-07-22T08:35:06Z",
      "side": 1,
      "message": "should this be 30 for consistency with prior elements ?",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "067ea44d_0c02b7a3",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 331,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2020-07-22T09:16:18Z",
      "side": 1,
      "message": "Might be valid. Should be kept in mind. But I would adapt the timeout value as part of the according Gem/TCont-Delete stories, when it is finally clear, what the according processing efforts really are.",
      "parentUuid": "0271bf46_89f4dc9b",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47b1e583_8a938100",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 331,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-07-22T09:29:02Z",
      "side": 1,
      "message": "+1, how is this done in python version ? is it hardcoded ? wondering if there is magic for configuration or exponential backoff strategy here.",
      "parentUuid": "067ea44d_0c02b7a3",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e52edc17_c706d71c",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 1119,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-07-22T08:35:06Z",
      "side": 1,
      "message": "you mean that while this call arrives there could be some pending flow config ? at least in VOLTHA the tech profile configuration is done at the beginning and is kinda \"sed and forget\" I don\u0027t expect this to be changing.",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b510e74_139e1a41",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 1119,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2020-07-22T09:16:18Z",
      "side": 1,
      "message": "TechProfile and flow configuration seem to arrive at OnuAdapter in parallel. Moreover in the Go Adapter we acknowledge the TechProfile configuration already before all the processing is done. So at the point that this process is finished, the flow configuration might also already be stored in the adapter. Also already the python code supported the flow update at this point.",
      "parentUuid": "e52edc17_c706d71c",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e06c388_098f5336",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 2
      },
      "lineNbr": 1119,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-07-22T09:29:02Z",
      "side": 1,
      "message": "I did not get what you mean with \"in the Go Adapter we acknowledge the TechProfile configuration already before all the processing is done\" can you explain ?",
      "parentUuid": "1b510e74_139e1a41",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd793abc_4711b440",
        "filename": "internal/pkg/onuadaptercore/omci_ani_config.go",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000513
      },
      "writtenOn": "2020-07-22T08:57:47Z",
      "side": 1,
      "message": "Dot1Mapper means IEEE 802.1p mapper. am I wrong?",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1969dc73_111202cf",
        "filename": "internal/pkg/onuadaptercore/omci_ani_config.go",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2020-07-22T09:20:59Z",
      "side": 1,
      "message": "Yes, maybe somewhere here in comments also only called mapper ...",
      "parentUuid": "bd793abc_4711b440",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee1d19aa_d66e7825",
        "filename": "internal/pkg/onuadaptercore/omci_ani_config.go",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1000513
      },
      "writtenOn": "2020-07-22T08:57:47Z",
      "side": 1,
      "message": "tcont0ID and gemPortXID is same current python code base. Maybe We can apply same approach here.",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8982324_d6a3147a",
        "filename": "internal/pkg/onuadaptercore/omci_ani_config.go",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2020-07-22T09:20:59Z",
      "side": 1,
      "message": "Yes - valid for first GemPort only of course. I also would not want to leave that scheme - as long as not needed. But at this code position here the T-Cont is referenced, and here the value must be used that the ONU announced in its MibUpload. This still has to be done.",
      "parentUuid": "ee1d19aa_d66e7825",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f989782_c41bf0dd",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 2
      },
      "lineNbr": 671,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-07-22T08:35:06Z",
      "side": 1,
      "message": "possibly worth returning the error instead of simply logging. valid for all methods in this class.",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb5437f5_c9237036",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 2
      },
      "lineNbr": 671,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2020-07-22T09:16:18Z",
      "side": 1,
      "message": "In this case nil is already the indication for some error, while in a success case the pointer to the meInstance s returned. Also already taken into consideration accordingly by the caller.",
      "parentUuid": "1f989782_c41bf0dd",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "253070bb_31914494",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 2
      },
      "lineNbr": 671,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-07-22T09:29:02Z",
      "side": 1,
      "message": "as a best practice in go nil return does mean successful run of the method, so please add the error return, otherwise it goes against go code standards and lowers maintainability in the future",
      "parentUuid": "eb5437f5_c9237036",
      "revId": "3dbcdd2be27ae8e672b5e0561b151f57bc8fcf20",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    }
  ]
}