{
  "comments": [
    {
      "key": {
        "uuid": "8355cf9d_b8ea858e",
        "filename": "internal/pkg/onuadaptercore/alarm_manager.go",
        "patchSetId": 13
      },
      "lineNbr": 82,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-02-17T16:00:12Z",
      "side": 1,
      "message": "This looks already better for me. My original intention anyway was to have the onuEventList as member of the onuAlarmManager so that it does not need to be constructed with every get*() access from new. But maybe GoLang is a bit smarter and keeps somewhere a copy of that local list, so that construction is not always be done again - don\u0027t know, but I would doubt that.",
      "revId": "ac1f5adb54810536bd45ea52daea3f9f9a978832",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c67cda5_e552a6ef",
        "filename": "internal/pkg/onuadaptercore/alarm_manager.go",
        "patchSetId": 13
      },
      "lineNbr": 192,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-02-17T16:00:12Z",
      "side": 1,
      "message": "Comment on reply on patch version 12: So you expect that meAlarmMap does not include all possible 224 alarm bits? Anyway we are interested only in some few - for which the events are defined - it would bve possible to just check with some \u0027mask\u0027 on them. \nOn the other hand: is there soe debug indication for some message alarm that can\u0027t be found in meAlarmMap?",
      "revId": "ac1f5adb54810536bd45ea52daea3f9f9a978832",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ffb5b19_a8ed7728",
        "filename": "internal/pkg/onuadaptercore/alarm_manager.go",
        "patchSetId": 13
      },
      "lineNbr": 197,
      "author": {
        "id": 1000617
      },
      "writtenOn": "2021-02-17T15:00:56Z",
      "side": 1,
      "message": "Before processing an alarm message, is there a way to see if an instance of that managed entity exists for the ONU (class ID + instance ID) before further processing?\n\nIf none exists, then a warning log message may be appropriate since the ME should exist.  Note that an alarm can be raised on an existing ME in the ONU while the initial MIB upload is in process.  Very small chance but it could occur.  If it does, it could be a trigger to signal an  initial alarm synchronization once that feature is supported.",
      "revId": "ac1f5adb54810536bd45ea52daea3f9f9a978832",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f2c2b58_275c9059",
        "filename": "internal/pkg/onuadaptercore/alarm_manager.go",
        "patchSetId": 13
      },
      "lineNbr": 198,
      "author": {
        "id": 1000617
      },
      "writtenOn": "2021-02-17T15:00:56Z",
      "side": 1,
      "message": "I was not able to find any initial support for detecting deletion of a Managed Entity from the active MIB that may have an alarm raised (and entries in the alarm table). Deletion could occur due to Delete, MIB Reset, or Reboot request.",
      "revId": "ac1f5adb54810536bd45ea52daea3f9f9a978832",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98d8ea7f_267b70b2",
        "filename": "internal/pkg/onuadaptercore/alarm_manager.go",
        "patchSetId": 13
      },
      "lineNbr": 254,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-02-17T16:00:12Z",
      "side": 1,
      "message": "comment on reply on patch version 9: It still looks strange to me, even htough the py code may operate this way. Would be interseting to see the behavior of the system for some circuitpack related alarm...",
      "revId": "ac1f5adb54810536bd45ea52daea3f9f9a978832",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4aa1673_fac38e43",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 13
      },
      "lineNbr": 1462,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-02-17T13:23:53Z",
      "side": 1,
      "message": "I would propose to implement a similar protection as done for the PM-collector (see above).",
      "range": {
        "startLine": 1462,
        "startChar": 7,
        "endLine": 1462,
        "endChar": 24
      },
      "revId": "ac1f5adb54810536bd45ea52daea3f9f9a978832",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0663d879_550df699",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 13
      },
      "lineNbr": 1588,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-02-17T13:23:53Z",
      "side": 1,
      "message": "I would propose to implement a similar protection as done for the PM-collector (see above).",
      "range": {
        "startLine": 1588,
        "startChar": 24,
        "endLine": 1588,
        "endChar": 28
      },
      "revId": "ac1f5adb54810536bd45ea52daea3f9f9a978832",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6944356_1788351c",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 13
      },
      "lineNbr": 2856,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-02-17T13:23:53Z",
      "side": 1,
      "message": "As alarm manager was stopped in dh::resetFsms() it has to be restarted here (refer to PM-collector).",
      "range": {
        "startLine": 2856,
        "startChar": 0,
        "endLine": 2856,
        "endChar": 1
      },
      "revId": "ac1f5adb54810536bd45ea52daea3f9f9a978832",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    }
  ]
}