{
  "comments": [
    {
      "key": {
        "uuid": "b51cb5bb_d14cfea8",
        "filename": "VERSION",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "I think we can leave version as 0.0.1-dev until we have the ONU coming up in VOLTHA",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 9
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd3dc26e_816f8735",
        "filename": "adaptercoreont/device_handler.go",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "There are some replication of parameters between this and https://github.com/opencord/voltha-protos/blob/master/protos/voltha_protos/device.proto#L220 that you have at line 48. The Device also carries proper types for state etc",
      "range": {
        "startLine": 44,
        "startChar": 5,
        "endLine": 44,
        "endChar": 18
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1d5106a_df017f42",
        "filename": "adaptercoreont/device_handler.go",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "I would Suggest the DeviceType object here https://github.com/opencord/voltha-protos/blob/master/protos/voltha_protos/device.proto#L15",
      "range": {
        "startLine": 46,
        "startChar": 18,
        "endLine": 46,
        "endChar": 24
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b34b869b_942d2a92",
        "filename": "adaptercoreont/device_handler.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "seem that you are not actually ding anything in this method, I would start by doing the add",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 133,
        "endChar": 36
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fb66dae_8bac22b0",
        "filename": "adaptercoreont/device_handler.go",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "general comment: please be consistent, the elements at the start of the methods shoudl be debug",
      "range": {
        "startLine": 150,
        "startChar": 5,
        "endLine": 150,
        "endChar": 10
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d9583a9_acd118b9",
        "filename": "adaptercoreont/device_handler.go",
        "patchSetId": 4
      },
      "lineNbr": 267,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "just to be consistent I woudl avoid ONT in favour of ONU. This is for historic reasons",
      "range": {
        "startLine": 267,
        "startChar": 49,
        "endLine": 267,
        "endChar": 52
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea726c63_34fc3994",
        "filename": "adaptercoreont/device_handler.go",
        "patchSetId": 4
      },
      "lineNbr": 499,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "Seems like there are two independent state machines for a device, the OmciDevice one and the MibSync one, why is that?",
      "range": {
        "startLine": 499,
        "startChar": 4,
        "endLine": 499,
        "endChar": 26
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98a27848_40fe6af6",
        "filename": "adaptercoreont/device_handler.go",
        "patchSetId": 4
      },
      "lineNbr": 586,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "The state machine throws an error if the transition is not valid, we should check for that.",
      "range": {
        "startLine": 586,
        "startChar": 2,
        "endLine": 586,
        "endChar": 44
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8f14910_bd83569d",
        "filename": "adaptercoreont/device_handler.go",
        "patchSetId": 4
      },
      "lineNbr": 609,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "Tracking down this message seems like we\u0027re sending something on a channel simply to trigger a new state change \"onuDeviceEntry.MibSyncFsm.Event(\"upload_mib\")\", what is the benefit of using a channel here?",
      "range": {
        "startLine": 603,
        "startChar": 4,
        "endLine": 609,
        "endChar": 46
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7151c9ea_25125978",
        "filename": "adaptercoreont/device_handler.go",
        "patchSetId": 4
      },
      "lineNbr": 629,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "Return the error",
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f52961a1_038ed8b7",
        "filename": "adaptercoreont/mib_sync.go",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "This is called by the state machine and just call another method, why do we need this proxy method?",
      "range": {
        "startLine": 53,
        "startChar": 38,
        "endLine": 53,
        "endChar": 57
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f4d02fe_133afc49",
        "filename": "adaptercoreont/ont_device_entry.go",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "Seems like the \"mibSyncFsm\" is used intstead of this mapping (with the exception of \n\nonuDeviceEntry.mibDbClass \u003d onuDeviceEntry.supportedFsms[\"mib-synchronizer\"].databaseClass\n\nreferenced below, do we still need this?",
      "range": {
        "startLine": 85,
        "startChar": 2,
        "endLine": 100,
        "endChar": 3
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca3345c_01d6f765",
        "filename": "adaptercoreont/ont_device_entry.go",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "we probably wanted to put this in the proto",
      "range": {
        "startLine": 108,
        "startChar": 2,
        "endLine": 108,
        "endChar": 12
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7d5f21_7f3f4b9c",
        "filename": "adaptercoreont/ont_device_state_transition.go",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "return error here and then return when needed.",
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44fb1a20_e3f58836",
        "filename": "adaptercoreont/openonu.go",
        "patchSetId": 4
      },
      "lineNbr": 156,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "This is probably a good way to start a thread to process mutiple message in parallel. One way that scales well in go is to simply split the messages in multiple channels (in BBSim we have one channel per ONU).\n\nThis article about that approach is very interesting: http://marcio.io/2015/07/handling-1-million-requests-per-minute-with-golang/",
      "range": {
        "startLine": 156,
        "startChar": 21,
        "endLine": 156,
        "endChar": 50
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "264bc13c_3dcb1ac9",
        "filename": "adaptercoreont/openonu.go",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "we should check for errors and log them, if we don\u0027t we\u0027ll only find the in openolt adapter, but if something is wrong in the ONU we should find it here too",
      "range": {
        "startLine": 163,
        "startChar": 2,
        "endLine": 163,
        "endChar": 48
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e19f9338_53ea39c8",
        "filename": "adaptercoreont/openonu.go",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "and most likely try to handle it and return the error",
      "parentUuid": "264bc13c_3dcb1ac9",
      "range": {
        "startLine": 163,
        "startChar": 2,
        "endLine": 163,
        "endChar": 48
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7ec0715_a25be7db",
        "filename": "config/config.go",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-03-30T08:04:10Z",
      "side": 1,
      "message": "openonu",
      "range": {
        "startLine": 44,
        "startChar": 32,
        "endLine": 44,
        "endChar": 39
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28594272_77b0c20f",
        "filename": "go.mod",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "we should not depend on version 1 of the proto",
      "range": {
        "startLine": 14,
        "startChar": 1,
        "endLine": 14,
        "endChar": 53
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a5a34e_16494aec",
        "filename": "main.go",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "all the other components use log.JSON",
      "range": {
        "startLine": 63,
        "startChar": 27,
        "endLine": 63,
        "endChar": 34
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12c41120_654c49ad",
        "filename": "main.go",
        "patchSetId": 4
      },
      "lineNbr": 309,
      "author": {
        "id": 1000007
      },
      "writtenOn": "2020-03-29T19:38:22Z",
      "side": 1,
      "message": "Please specify that this is the Go version of the adapter in the \"vendor\" field",
      "range": {
        "startLine": 309,
        "startChar": 12,
        "endLine": 309,
        "endChar": 59
      },
      "revId": "7a6fa28165db4b5bc8d64fd3a18d82224157b7ce",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}