{
  "comments": [
    {
      "key": {
        "uuid": "60068a1d_432b7ace",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-21T13:43:56Z",
      "side": 1,
      "message": "add the deviceId also in the returned error",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58f2adce_fdd70d43",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2020-09-22T09:58:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60068a1d_432b7ace",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b5edb07_ef74b685",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-21T13:43:56Z",
      "side": 1,
      "message": "here you are holding the lock until success or for 30 seconds. given that the KVStore  lock is used for other elements, will this create a bottle neck ?",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7894081_ddc2ed50",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2020-09-22T09:58:14Z",
      "side": 1,
      "message": "These locks are specific for only one onu-device. Furthermore they lock the access to techprof-processing as well as to onu-specific techprof- and flow-storage only and guarantee sequential processing in this area. All other kv-access-activities - even for this particular onu - are not blocked. Therefore I would not see a bottle neck here.",
      "parentUuid": "1b5edb07_ef74b685",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81be5014_4b5a4f94",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-22T12:11:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f7894081_ddc2ed50",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eec2e232_62cb4a24",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-21T13:43:56Z",
      "side": 1,
      "message": "why 255 ? I do not think this is a hard limit for the ONUs, right ?",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "714a4af3_6112bc5e",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2020-09-22T09:58:14Z",
      "side": 1,
      "message": "This value holds the number of unis of one onu, not the number of onus itself. It comes with uint32 in the message, but is handled as uint8 internally due to its limited range.",
      "parentUuid": "eec2e232_62cb4a24",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aa5e933_c94b6948",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-22T12:11:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "714a4af3_6112bc5e",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bbb7b2e_0601a8b2",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-21T13:43:56Z",
      "side": 1,
      "message": "this needs to return error, I know we have an error story but it\u0027s becoming too big, please do it here given that it\u0027s a new method. same for the other errors in this method.",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16d5c797_7f87fd32",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2020-09-22T09:58:14Z",
      "side": 1,
      "message": "To guarantee concurrent processing of the Go-adapter, all reconcileDevice*() functions are called as Go-routines at certain synchronization points during the process of onu-reconcilement. That means, that we can\u0027t delay the return of api-call Reconcile_device() until the whole reconcilement is finished. Currently we handle any error locally at the adapter itself and indicate them within the adapter log. I know, during one of our bi-weekly meetings, we had a short discussion regarding asynchroneous error reporting towards rw-core, when we talked about introduction of onu-reboot processing. But introducing such an asynchroneous error reporting should be handled separately. Are there any docs or examples available regarding asynchroneous error reporting towards rw-core?",
      "parentUuid": "3bbb7b2e_0601a8b2",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e730cfd_c5438d83",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-22T12:11:34Z",
      "side": 1,
      "message": "this the most up to date that I know of. https://docs.google.com/document/d/1sOv5R7iOBTlzXcCVaUfOOzd5617ISQGnseadhx8pb3w/edit?pli\u003d1\nYour best bet is to probably ping Khen on slack.",
      "parentUuid": "16d5c797_7f87fd32",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2caa66c8_565862b2",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 2041,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2020-09-21T13:43:56Z",
      "side": 1,
      "message": "documentation is needed",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc9bc5aa_b71c3c47",
        "filename": "internal/pkg/onuadaptercore/device_handler.go",
        "patchSetId": 1
      },
      "lineNbr": 2041,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2020-09-22T09:58:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2caa66c8_565862b2",
      "revId": "bd5c5e87671ef7c17c99257c4b357974c0d8ae9d",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}