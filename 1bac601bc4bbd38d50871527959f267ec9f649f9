{
  "comments": [
    {
      "key": {
        "uuid": "5689abb0_bd53a911",
        "filename": "internal/pkg/onuadaptercore/mib_sync.go",
        "patchSetId": 3
      },
      "lineNbr": 237,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2021-01-11T17:06:27Z",
      "side": 1,
      "message": "This seems like a duplicate code of requestMdsValue function. Is just invoking requestMdsValue ok?",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 237,
        "endChar": 45
      },
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18763a48_30d658cb",
        "filename": "internal/pkg/onuadaptercore/mib_sync.go",
        "patchSetId": 3
      },
      "lineNbr": 237,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-01-12T12:19:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5689abb0_bd53a911",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 237,
        "endChar": 45
      },
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a87f1c15_5730d942",
        "filename": "internal/pkg/onuadaptercore/mib_sync.go",
        "patchSetId": 3
      },
      "lineNbr": 471,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-01-11T15:03:10Z",
      "side": 1,
      "message": "I think the check on mibDataSyncOnu \u003e 0 can be omitted.\nIf ONU indicates 0 then also OLT counter should be 0 which would be valid in my point of view.",
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30a28412_164ee010",
        "filename": "internal/pkg/onuadaptercore/mib_sync.go",
        "patchSetId": 3
      },
      "lineNbr": 471,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2021-01-11T17:06:27Z",
      "side": 1,
      "message": "Are you sure? From the specifications it seems like 0 is reserved value. I quote below from the specification. \n\nWhen incremented, the sequence number that follows 255 is 1. Zero is reserved for the following cases:\n1) default MIB with which the ONU left the factory;\n2) an ONU which after initialization cannot restore its MIB.\n\nIt seems like we should ideally never see 0 as MDS counter",
      "parentUuid": "a87f1c15_5730d942",
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec52b541_49275e40",
        "filename": "internal/pkg/onuadaptercore/mib_sync.go",
        "patchSetId": 3
      },
      "lineNbr": 471,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-01-12T12:19:43Z",
      "side": 1,
      "message": "My understanding is - please correct me if I\u0027m wrong - that the zero would be sent by the ONU even until after the mib upload was completed, since no OMCI configurations were done by the adapter until then. We can see that the mib upload was completed during the previous startup by the fact, that we got into the \"ulStExaminingMds\" state in the first place. So, after all, in this specific case it seems to be possible to send the ONU directly to the \"ulStInSync\" state via the \"ulEvSuccess\" event.",
      "parentUuid": "a87f1c15_5730d942",
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07507f13_2e55e3ce",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-01-11T15:03:10Z",
      "side": 1,
      "message": "also EndSoftwareDownloadResponseType, ActivateSoftwareResponseType and CommitSoftwareResponseType would be required here",
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7f5e371_2a3d6ab7",
        "filename": "internal/pkg/onuadaptercore/omci_cc.go",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-01-12T12:19:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "07507f13_2e55e3ce",
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab59f1b2_a0bdb46b",
        "filename": "internal/pkg/onuadaptercore/onu_device_entry.go",
        "patchSetId": 3
      },
      "lineNbr": 342,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2021-01-11T17:06:27Z",
      "side": 1,
      "message": "I am unable to find in this patch or old code where this is done periodically. Is it done periodically or what triggers examining the MDS?",
      "range": {
        "startLine": 342,
        "startChar": 38,
        "endLine": 342,
        "endChar": 54
      },
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ca782cc_b6feed0a",
        "filename": "internal/pkg/onuadaptercore/onu_device_entry.go",
        "patchSetId": 3
      },
      "lineNbr": 342,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-01-12T12:19:43Z",
      "side": 1,
      "message": "The goal of this little story was merely the basic MDS-handling to provide the counterpart for a first test with ONU (esp. BBSIM). Going to set up a new story for the periodic audit.",
      "parentUuid": "ab59f1b2_a0bdb46b",
      "range": {
        "startLine": 342,
        "startChar": 38,
        "endLine": 342,
        "endChar": 54
      },
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73ca6a6b_d64db844",
        "filename": "internal/pkg/onuadaptercore/onu_device_entry.go",
        "patchSetId": 3
      },
      "lineNbr": 771,
      "author": {
        "id": 1000666
      },
      "writtenOn": "2021-01-11T15:03:10Z",
      "side": 1,
      "message": "should be in some else branch, otherwise increment from 255 to 2.",
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24a39b1a_2118a916",
        "filename": "internal/pkg/onuadaptercore/onu_device_entry.go",
        "patchSetId": 3
      },
      "lineNbr": 771,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2021-01-12T12:19:43Z",
      "side": 1,
      "message": "Ack - Was disimproved after \"sca-check\"!",
      "parentUuid": "73ca6a6b_d64db844",
      "revId": "1bac601bc4bbd38d50871527959f267ec9f649f9",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}